{"ast":null,"code":"\"use strict\";\n/**\n * @file 圆形覆盖物\n * @author hedongran\n * @email hdr01@126.com\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar Graphy_1 = tslib_1.__importDefault(require(\"./Graphy\"));\n\nvar shallowequal_1 = tslib_1.__importDefault(require(\"shallowequal\"));\n\n;\n/**\n * 在地图上绘制简单的圆形\n * @visibleName Circle 圆形\n */\n\nvar Circle =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Circle, _super);\n\n  function Circle(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.options = ['strokeColor', 'strokeWeight', 'strokeOpacity', 'strokeStyle', 'fillColor', 'fillOpacity', 'enableMassClear', 'enableEditing'];\n    return _this;\n  }\n\n  Circle.prototype.onDataUpdate = function (prevProps) {\n    var _a = this.props,\n        center = _a.center,\n        radius = _a.radius,\n        autoViewport = _a.autoViewport;\n    var preCenter = prevProps.center,\n        preRadius = prevProps.radius,\n        preViewport = prevProps.autoViewport;\n    var isCenterChanged = center && !shallowequal_1.default(center, preCenter);\n    var isRadiusChanged = !!(radius && !shallowequal_1.default(radius, preRadius));\n    var isViewportChanged = !shallowequal_1.default(autoViewport, preViewport);\n\n    if (isCenterChanged) {\n      this.overlay.setCenter(this.parseCenter(center));\n    }\n\n    if (isRadiusChanged) {\n      this.overlay.setRadius(radius);\n    }\n\n    if (autoViewport && (isCenterChanged || isRadiusChanged || isViewportChanged)) {\n      var bounds = this.overlay.getBounds();\n      var viewport = this.props.map.getViewport(bounds, this.props.viewportOptions || {});\n      this.props.map.setViewport(viewport);\n    }\n  };\n\n  Circle.prototype.getOverlay = function () {\n    var _a = this.props,\n        center = _a.center,\n        radius = _a.radius;\n    return new BMapGL.Circle(this.parseCenter(center), radius, this.getOptions());\n  };\n\n  Circle.prototype.parseCenter = function (center) {\n    var isMC = this.props.coordType === 'bd09mc';\n    var point;\n\n    if (center instanceof Array) {\n      point = new BMapGL.Point(center[0], center[1]);\n    } else if (center instanceof BMapGL.Point) {\n      point = center;\n    } else {\n      point = new BMapGL.Point(center.lng, center.lat);\n    }\n\n    if (isMC) {\n      point = BMapGL.Projection.convertMC2LL(point);\n    }\n\n    return point;\n  };\n\n  Circle.prototype.render = function () {\n    return null;\n  };\n\n  return Circle;\n}(Graphy_1.default);\n\nexports.default = Circle;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/node_modules/react-bmapgl/Overlay/Circle.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","Graphy_1","__importDefault","shallowequal_1","Circle","_super","__extends","props","_this","call","options","prototype","onDataUpdate","prevProps","_a","center","radius","autoViewport","preCenter","preRadius","preViewport","isCenterChanged","default","isRadiusChanged","isViewportChanged","overlay","setCenter","parseCenter","setRadius","bounds","getBounds","viewport","map","getViewport","viewportOptions","setViewport","getOverlay","BMapGL","getOptions","isMC","coordType","point","Array","Point","lng","lat","Projection","convertMC2LL","render"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @file 圆形覆盖物\n * @author hedongran\n * @email hdr01@126.com\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Graphy_1 = tslib_1.__importDefault(require(\"./Graphy\"));\nvar shallowequal_1 = tslib_1.__importDefault(require(\"shallowequal\"));\n;\n/**\n * 在地图上绘制简单的圆形\n * @visibleName Circle 圆形\n */\nvar Circle = /** @class */ (function (_super) {\n    tslib_1.__extends(Circle, _super);\n    function Circle(props) {\n        var _this = _super.call(this, props) || this;\n        _this.options = [\n            'strokeColor',\n            'strokeWeight',\n            'strokeOpacity',\n            'strokeStyle',\n            'fillColor',\n            'fillOpacity',\n            'enableMassClear',\n            'enableEditing',\n        ];\n        return _this;\n    }\n    Circle.prototype.onDataUpdate = function (prevProps) {\n        var _a = this.props, center = _a.center, radius = _a.radius, autoViewport = _a.autoViewport;\n        var preCenter = prevProps.center, preRadius = prevProps.radius, preViewport = prevProps.autoViewport;\n        var isCenterChanged = center && !shallowequal_1.default(center, preCenter);\n        var isRadiusChanged = !!(radius && !shallowequal_1.default(radius, preRadius));\n        var isViewportChanged = !shallowequal_1.default(autoViewport, preViewport);\n        if (isCenterChanged) {\n            this.overlay.setCenter(this.parseCenter(center));\n        }\n        if (isRadiusChanged) {\n            this.overlay.setRadius(radius);\n        }\n        if (autoViewport && (isCenterChanged || isRadiusChanged || isViewportChanged)) {\n            var bounds = this.overlay.getBounds();\n            var viewport = this.props.map.getViewport(bounds, this.props.viewportOptions || {});\n            this.props.map.setViewport(viewport);\n        }\n    };\n    Circle.prototype.getOverlay = function () {\n        var _a = this.props, center = _a.center, radius = _a.radius;\n        return new BMapGL.Circle(this.parseCenter(center), radius, this.getOptions());\n    };\n    Circle.prototype.parseCenter = function (center) {\n        var isMC = this.props.coordType === 'bd09mc';\n        var point;\n        if (center instanceof Array) {\n            point = new BMapGL.Point(center[0], center[1]);\n        }\n        else if (center instanceof BMapGL.Point) {\n            point = center;\n        }\n        else {\n            point = new BMapGL.Point(center.lng, center.lat);\n        }\n        if (isMC) {\n            point = BMapGL.Projection.convertMC2LL(point);\n        }\n        return point;\n    };\n    Circle.prototype.render = function () {\n        return null;\n    };\n    return Circle;\n}(Graphy_1.default));\nexports.default = Circle;\n"]},"metadata":{},"sourceType":"script"}