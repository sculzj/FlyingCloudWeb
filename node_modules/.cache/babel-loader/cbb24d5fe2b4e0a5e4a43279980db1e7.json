{"ast":null,"code":"import \"antd/es/space/style/css\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\components\\\\LoginPanel\\\\index.jsx\";\nimport React, { PureComponent } from 'react';\nimport { EyeInvisibleOutlined, EyeTwoTone, UserOutlined, LockOutlined } from '@ant-design/icons';\nimport loginStyle from './index.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPanel extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginLoading: false,\n      codeLoading: false,\n      tip: '获取验证码'\n    };\n\n    this.toLogin = () => {\n      if (!this.uid.value || !this.pwd.value || !this.auth.value) {\n        _Modal.error({\n          title: '错误！',\n          okText: '确认',\n          content: '登录账号及密码均不能为空，并请输入验证码！',\n          afterClose: () => {}\n        });\n      } else {\n        this.setState({\n          loginLoading: true\n        });\n        const id = setTimeout(() => {\n          _Modal.error({\n            title: '错误！',\n            okText: '确认',\n            content: '网络连接超时！请检查您的网络配置，确保可以正常访问网络。',\n            afterClose: () => {\n              this.setState({\n                loginLoading: false\n              });\n            }\n          });\n        }, 15000); //15s后登录失败，弹框提示\n        //发送网络请求\n      }\n    };\n\n    this.getAuthCode = () => {\n      this.setState({\n        codeLoading: true\n      });\n      let timer = 60;\n      this.setState({\n        tip: `${timer}s后重新获取`\n      });\n      const id = setInterval(() => {\n        timer = timer - 1;\n        if (timer >= 0) this.setState({\n          tip: `${timer}s后重新获取`\n        });else {\n          clearInterval(id);\n          this.setState({\n            tip: '获取验证码'\n          });\n          this.setState({\n            codeLoading: false\n          });\n        }\n      }, 1000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: loginStyle.login,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u7528\\u6237\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Space, {\n        size: 32,\n        direction: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(_Input, {\n          ref: element => this.uid = element,\n          size: \"large\",\n          name: \"userId\",\n          className: loginStyle.item,\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u767B\\u5F55\\u8D26\\u53F7\",\n          prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Input.Password, {\n          ref: element => this.pwd = element,\n          name: \"userPwd\",\n          className: loginStyle.item,\n          size: \"large\",\n          placeholder: \"\\u8BF7\\u8F93\\u5165\\u767B\\u5F55\\u5BC6\\u7801\",\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 45\n          }, this),\n          iconRender: visible => visible ? /*#__PURE__*/_jsxDEV(EyeTwoTone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 71\n          }, this) : /*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(_Checkbox, {\n            className: loginStyle.check,\n            children: \"\\u8BB0\\u4F4F\\u767B\\u5F55\\u72B6\\u6001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"link\",\n            className: loginStyle.link,\n            children: \"\\u5FD8\\u8BB0\\u5BC6\\u7801\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Input.Search, {\n          ref: element => this.auth = element,\n          placeholder: \"\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n          enterButton: this.state.tip,\n          size: \"large\",\n          loading: this.state.codeLoading,\n          onSearch: this.getAuthCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Button, {\n          className: loginStyle.item,\n          type: \"primary\",\n          size: \"large\",\n          onClick: this.toLogin,\n          loading: this.state.loginLoading,\n          children: \"\\u767B\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\u5F55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginPanel;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/components/LoginPanel/index.jsx"],"names":["React","PureComponent","EyeInvisibleOutlined","EyeTwoTone","UserOutlined","LockOutlined","loginStyle","LoginPanel","state","loginLoading","codeLoading","tip","toLogin","uid","value","pwd","auth","error","title","okText","content","afterClose","setState","id","setTimeout","getAuthCode","timer","setInterval","clearInterval","render","login","element","item","visible","check","link"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {Button, Input, Space, Checkbox, Modal} from \"antd\";\r\nimport {EyeInvisibleOutlined, EyeTwoTone, UserOutlined, LockOutlined} from '@ant-design/icons';\r\nimport loginStyle from './index.module.css';\r\n\r\nclass LoginPanel extends PureComponent {\r\n\r\n    state = {loginLoading: false, codeLoading: false, tip: '获取验证码'};\r\n    toLogin = () => {\r\n        if (!this.uid.value || !this.pwd.value || !this.auth.value) {\r\n            Modal.error({\r\n                title: '错误！',\r\n                okText: '确认',\r\n                content: '登录账号及密码均不能为空，并请输入验证码！',\r\n                afterClose: () => {\r\n\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({loginLoading: true});\r\n            const id = setTimeout(() => {\r\n                Modal.error({\r\n                    title: '错误！',\r\n                    okText: '确认',\r\n                    content: '网络连接超时！请检查您的网络配置，确保可以正常访问网络。',\r\n                    afterClose: () => {\r\n                        this.setState({loginLoading: false});\r\n                    }\r\n                });\r\n            }, 15000);//15s后登录失败，弹框提示\r\n\r\n            //发送网络请求\r\n        }\r\n    }\r\n\r\n    getAuthCode = () => {\r\n        this.setState({codeLoading: true});\r\n        let timer = 60;\r\n        this.setState({tip: `${timer}s后重新获取`});\r\n        const id = setInterval(() => {\r\n            timer = timer - 1;\r\n            if (timer >= 0)\r\n                this.setState({tip: `${timer}s后重新获取`});\r\n            else {\r\n                clearInterval(id);\r\n                this.setState({tip: '获取验证码'});\r\n                this.setState({codeLoading: false});\r\n            }\r\n\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={loginStyle.login}>\r\n                <h3>用户登录</h3>\r\n                <Space size={32} direction='vertical'>\r\n                    <Input ref={element => this.uid = element} size='large' name='userId' className={loginStyle.item}\r\n                           placeholder='请输入登录账号' prefix={<UserOutlined/>}/>\r\n                    <Input.Password ref={element => this.pwd = element} name='userPwd' className={loginStyle.item}\r\n                                    size='large' placeholder='请输入登录密码'\r\n                                    prefix={<LockOutlined/>}\r\n                                    iconRender={visible => (visible ? <EyeTwoTone/> : <EyeInvisibleOutlined/>)}/>\r\n                    <div>\r\n                        <Checkbox className={loginStyle.check}>记住登录状态</Checkbox>\r\n                        <Button type='link' className={loginStyle.link}>忘记密码</Button>\r\n                    </div>\r\n                    <Input.Search ref={element => this.auth = element} placeholder='输入验证码' enterButton={this.state.tip}\r\n                                  size='large'\r\n                                  loading={this.state.codeLoading}\r\n                                  onSearch={this.getAuthCode}/>\r\n                    <Button className={loginStyle.item} type='primary'\r\n                            size='large' onClick={this.toLogin}\r\n                            loading={this.state.loginLoading}>登&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;录</Button>\r\n                    \r\n                </Space>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPanel;"]},"metadata":{},"sourceType":"module"}