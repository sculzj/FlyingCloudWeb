{"ast":null,"code":"import \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\pages\\\\Register\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport registerStyle from './index.module.css';\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { Status } from '../../resource/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    sm: {\n      span: 5\n    }\n  },\n  wrapperCol: {\n    sm: {\n      span: 17\n    }\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 5,\n    span: 17\n  }\n};\n\nclass Sign extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      codeState: {\n        verify: '',\n        message: ''\n      },\n      EmailState: {\n        verify: '',\n        message: ''\n      },\n      loading: false,\n      percent: 0\n    };\n    this.promise = '';\n\n    this.verifyOrgCode = event => {\n      const code = event.target.value;\n\n      if (!code) {\n        this.setState({\n          codeState: {\n            verify: Status.error,\n            helpMsg: '组织机构代码不能为空！'\n          }\n        });\n        return;\n      }\n\n      this.setState({\n        codeState: {\n          verify: Status.verifying,\n          helpMsg: ''\n        }\n      });\n      axios({\n        url: '/api/verifyOrgCode',\n        method: 'post',\n        data: {\n          orgCode: code\n        }\n      }).then(response => {\n        if (response.data.state === Status.success) {\n          this.setState({\n            codeState: {\n              verify: Status.error,\n              helpMsg: '该企业已注册，不允许重复注册！'\n            }\n          });\n        } else {\n          this.setState({\n            codeState: {\n              verify: Status.success,\n              helpMsg: ''\n            }\n          });\n        }\n      }).catch(err => {\n        alert(err.message);\n      });\n    };\n\n    this.verifyEmail = ({\n      getFieldValue\n    }) => ({\n      validator(_, value) {\n        axios({\n          url: '/api/verifyOrgEmail',\n          method: 'post',\n          data: {\n            orgEmail: value\n          }\n        }).then(response => {\n          if (response.data.state === Status.success) {\n            return new Promise.reject('该邮箱已绑定企业，不允许重复绑定！');\n          } else {\n            return new Promise.resolve();\n          }\n        }).catch(err => {\n          alert(err.message);\n        });\n      }\n\n    });\n\n    this.readyLicense = file => {\n      if (this.files.has('license')) {\n        this.files.delete('license');\n      }\n\n      this.files.append('license', file, `license_${this.formRef.getFieldValue('orgCode')}${file.name.slice(file.name.lastIndexOf('.'))}`);\n      return false;\n    };\n\n    this.readyAuthLeter = file => {\n      if (!this.files.get('license') || this.files.has('authLeter')) {\n        this.files.delete('authLeter');\n      }\n\n      this.files.append('authLeter', file, `authLeter_${this.formRef.getFieldValue('orgCode')}${file.name.slice(file.name.lastIndexOf('.'))}`);\n      return false;\n    };\n\n    this.toRegister = values => {\n      if (!this.files.get('authLeter')) {\n        _Modal.error({\n          title: '错误！',\n          okText: '确认！',\n          content: '必须上传营业执照和法人授权函！'\n        });\n\n        return;\n      }\n\n      const {\n        orgCode,\n        orgName,\n        orgSite,\n        orgAddress,\n        orgEmail\n      } = values;\n      this.setState({\n        loading: true\n      });\n      axios({\n        method: 'post',\n        url: '/api/register',\n        data: {\n          orgCode,\n          orgName,\n          orgSite,\n          orgAddress,\n          orgEmail\n        }\n      }).then(response => {\n        if (response.data.state === Status.success) {\n          axios({\n            url: '/api/upload',\n            method: 'post',\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            },\n            data: this.files\n          }).then(response => {\n            console.log(response.data);\n          }).catch(err => {\n            alert(err.message);\n          });\n        }\n      }).catch();\n    };\n  }\n\n  componentDidMount() {\n    this.files = new FormData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: registerStyle.frame,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../images/register_background.png\").default,\n        className: registerStyle.back,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: registerStyle.content,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: registerStyle.title,\n          children: \"\\u4F01\\u4E1A\\u7528\\u6237\\u6CE8\\u518C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          name: \"register\",\n          scrollToFirstError: true,\n          ...formItemLayout,\n          size: \"large\",\n          ref: element => {\n            this.formRef = element;\n          },\n          validateTrigger: ['onBlur'],\n          onFinish: this.toRegister,\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgCode\",\n            label: \"\\u7EC4\\u7EC7\\u673A\\u6784\\u4EE3\\u7801\",\n            validateStatus: this.state.codeState.verify,\n            hasFeedback: true,\n            help: this.state.codeState.helpMsg,\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              allowClear: true,\n              onBlur: this.verifyOrgCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgName\",\n            label: \"\\u4F01\\u4E1A\\u540D\\u79F0\",\n            hasFeedback: true,\n            rules: [{\n              required: true,\n              message: '企业名称不能为空！'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgSite\",\n            label: \"\\u4F01\\u4E1A\\u5B98\\u7F51\",\n            rules: [{\n              required: true,\n              message: '企业站点不合法！',\n              type: 'url'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgAddress\",\n            label: \"\\u4F01\\u4E1A\\u5730\\u5740\",\n            rules: [{\n              required: true,\n              message: '企业地址不能为空！'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgLicense\",\n            getValueProps: () => {\n              return 'fileList';\n            },\n            label: \"\\u8425\\u4E1A\\u6267\\u7167\",\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(_Upload, {\n              maxCount: 1,\n              accept: \".png,.jpg,.pdf\",\n              beforeUpload: this.readyLicense,\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 47\n                }, this),\n                children: \"\\u4E0A\\u4F20\\u6587\\u4EF6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgAuthLeter\",\n            getValueProps: () => {\n              return 'fileList';\n            },\n            label: \"\\u6CD5\\u4EBA\\u6388\\u6743\\u51FD\",\n            required: true,\n            children: /*#__PURE__*/_jsxDEV(_Upload, {\n              maxCount: 1,\n              accept: \".png,.jpg,.pdf\",\n              beforeUpload: this.readyAuthLeter,\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 47\n                }, this),\n                children: \"\\u4E0A\\u4F20\\u6587\\u4EF6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"orgEmail\",\n            label: \"\\u7BA1\\u7406\\u90AE\\u7BB1\",\n            rules: [{\n              required: true,\n              message: '邮箱地址不合法！',\n              type: 'email'\n            }, this.verifyEmail],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"pwd\",\n            label: \"\\u767B\\u5F55\\u5BC6\\u7801\",\n            rules: [{\n              required: true,\n              message: '密码必须包含大小写字母和数字的组合，长度在8-16位之间',\n              type: 'string',\n              pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,16}$/\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n              placeholder: \"\\u8BF7\\u8F93\\u5165\\u767B\\u5F55\\u5BC6\\u7801\",\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"configPwd\",\n            label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n            dependencies: ['pwd'],\n            hasFeedback: true,\n            rules: [{\n              required: true,\n              message: '请再次输入密码并确保两次密码输入一致！'\n            }, ({\n              getFieldValue\n            }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('pwd') === value) {\n                  return Promise.resolve();\n                }\n\n                return Promise.reject('两次输入密码不一致！');\n              }\n\n            })],\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n              placeholder: \"\\u8BF7\\u518D\\u6B21\\u8F93\\u5165\\u767B\\u5F55\\u5BC6\\u7801\",\n              allowClear: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, { ...tailLayout,\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              style: {\n                width: '100%'\n              },\n              loading: this.state.loading,\n              children: \"\\u63D0\\u4EA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Sign;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/pages/Register/index.jsx"],"names":["React","Component","registerStyle","UploadOutlined","axios","Status","formItemLayout","labelCol","sm","span","wrapperCol","tailLayout","offset","Sign","state","codeState","verify","message","EmailState","loading","percent","promise","verifyOrgCode","event","code","target","value","setState","error","helpMsg","verifying","url","method","data","orgCode","then","response","success","catch","err","alert","verifyEmail","getFieldValue","validator","_","orgEmail","Promise","reject","resolve","readyLicense","file","files","has","delete","append","formRef","name","slice","lastIndexOf","readyAuthLeter","get","toRegister","values","title","okText","content","orgName","orgSite","orgAddress","headers","console","log","componentDidMount","FormData","render","frame","require","default","back","element","required","type","pattern","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Form, Input, Upload, Modal, Progress} from \"antd\";\r\nimport registerStyle from './index.module.css'\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport {Status} from '../../resource/constant';\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        sm: {span: 5}\r\n    },\r\n    wrapperCol: {\r\n        sm: {span: 17}\r\n    }\r\n}\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 5, span: 17}\r\n}\r\n\r\nclass Sign extends Component {\r\n\r\n    componentDidMount() {\r\n        this.files = new FormData();\r\n    }\r\n\r\n    state = {codeState: {verify: '', message: ''}, EmailState: {verify: '', message: ''}, loading: false, percent: 0};\r\n    promise = '';\r\n\r\n    verifyOrgCode = (event) => {\r\n        const code = event.target.value;\r\n        if (!code) {\r\n            this.setState({codeState: {verify: Status.error, helpMsg: '组织机构代码不能为空！'}});\r\n            return;\r\n        }\r\n        this.setState({codeState: {verify: Status.verifying, helpMsg: ''}});\r\n        axios({\r\n            url: '/api/verifyOrgCode',\r\n            method: 'post',\r\n            data: {orgCode: code}\r\n        }).then(response => {\r\n            if (response.data.state === Status.success) {\r\n                this.setState({codeState: {verify: Status.error, helpMsg: '该企业已注册，不允许重复注册！'}});\r\n            } else {\r\n                this.setState({codeState: {verify: Status.success, helpMsg: ''}});\r\n            }\r\n        }).catch(err => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n\r\n    // verifyEmail2 = (event) => {\r\n    //     axios({\r\n    //         url: '/api/verifyOrgEmail',\r\n    //         method: 'post',\r\n    //         data: {orgEmail:event.target.value}\r\n    //     }).then(response=>{\r\n    //         if (response.data.state === Status.success) {\r\n    //             this.setState({EmailState: {verify: Status.error, helpMsg: '该邮箱已绑定企业，不允许重复绑定！'}});\r\n    //         } else {\r\n    //             this.setState({EmailState: {verify: Status.success, helpMsg: ''}});\r\n    //         }\r\n    //     }).catch(err=>{\r\n    //         alert(err.message);\r\n    //         }\r\n    //     );\r\n    // }\r\n\r\n    verifyEmail = ({getFieldValue}) => ({\r\n        validator(_, value) {\r\n            axios({\r\n                url: '/api/verifyOrgEmail',\r\n                method: 'post',\r\n                data: {orgEmail:value}\r\n            }).then(response=>{\r\n                if (response.data.state === Status.success) {\r\n                    return new Promise.reject('该邮箱已绑定企业，不允许重复绑定！');\r\n                } else {\r\n                    return new Promise.resolve();\r\n                }\r\n            }).catch(err=>{\r\n                    alert(err.message);\r\n                }\r\n            );\r\n        }\r\n    })\r\n\r\n    readyLicense = file => {\r\n        if (this.files.has('license')) {\r\n            this.files.delete('license');\r\n        }\r\n        this.files.append('license', file,\r\n            `license_${this.formRef.getFieldValue('orgCode')}${file.name.slice(file.name.lastIndexOf('.'))}`);\r\n        return false;\r\n    }\r\n\r\n    readyAuthLeter = file => {\r\n        if (!this.files.get('license') || this.files.has('authLeter')) {\r\n            this.files.delete('authLeter');\r\n        }\r\n        this.files.append('authLeter', file,\r\n            `authLeter_${this.formRef.getFieldValue('orgCode')}${file.name.slice(file.name.lastIndexOf('.'))}`);\r\n        return false;\r\n    }\r\n\r\n    toRegister = (values) => {\r\n        if (!this.files.get('authLeter')) {\r\n            Modal.error({\r\n                title: '错误！',\r\n                okText: '确认！',\r\n                content: '必须上传营业执照和法人授权函！'\r\n            });\r\n            return;\r\n        }\r\n        const {orgCode, orgName, orgSite, orgAddress, orgEmail} = values;\r\n        this.setState({loading: true});\r\n        axios({\r\n            method: 'post',\r\n            url: '/api/register',\r\n            data: {orgCode, orgName, orgSite, orgAddress, orgEmail}\r\n        }).then(response => {\r\n            if (response.data.state === Status.success) {\r\n                axios({\r\n                    url: '/api/upload',\r\n                    method: 'post',\r\n                    headers: {'Content-Type': 'multipart/form-data'},\r\n                    data: this.files\r\n                }).then(response => {\r\n                    console.log(response.data);\r\n                }).catch(err => {\r\n                    alert(err.message);\r\n                });\r\n            }\r\n        }).catch()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={registerStyle.frame}>\r\n                <img src={require(\"../../images/register_background.png\").default} className={registerStyle.back}\r\n                     alt=''/>\r\n                <div className={registerStyle.content}>\r\n                    <h2 className={registerStyle.title}>企业用户注册</h2>\r\n                    <Form name='register' scrollToFirstError {...formItemLayout}\r\n                          size='large' ref={element => {\r\n                        this.formRef = element\r\n                    }} validateTrigger={['onBlur']} onFinish={this.toRegister}>\r\n                        <Form.Item name='orgCode' label='组织机构代码' validateStatus={this.state.codeState.verify}\r\n                                   hasFeedback help={this.state.codeState.helpMsg} required>\r\n                            <Input allowClear onBlur={this.verifyOrgCode}/>\r\n                        </Form.Item>\r\n                        <Form.Item name='orgName' label='企业名称' hasFeedback\r\n                                   rules={[{required: true, message: '企业名称不能为空！'}]}>\r\n                            <Input allowClear/>\r\n                        </Form.Item>\r\n                        <Form.Item name='orgSite' label='企业官网'\r\n                                   rules={[{required: true, message: '企业站点不合法！', type: 'url'}]}\r\n                                   hasFeedback>\r\n                            <Input allowClear/>\r\n                        </Form.Item>\r\n                        <Form.Item name='orgAddress' label='企业地址' rules={[{required: true, message: '企业地址不能为空！'}]}\r\n                                   hasFeedback>\r\n                            <Input allowClear/>\r\n                        </Form.Item>\r\n                        <Form.Item name='orgLicense' getValueProps={() => {\r\n                            return 'fileList'\r\n                        }} label='营业执照' required>\r\n                            <Upload maxCount={1} accept='.png,.jpg,.pdf' beforeUpload={this.readyLicense}>\r\n                                <Button icon={<UploadOutlined/>}>上传文件</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n                        <Form.Item name='orgAuthLeter' getValueProps={() => {\r\n                            return 'fileList'\r\n                        }} label='法人授权函' required>\r\n                            <Upload maxCount={1} accept='.png,.jpg,.pdf' beforeUpload={this.readyAuthLeter}>\r\n                                <Button icon={<UploadOutlined/>}>上传文件</Button>\r\n                            </Upload>\r\n                        </Form.Item>\r\n                        <Form.Item name='orgEmail' label='管理邮箱'\r\n                                   rules={[{required: true, message: '邮箱地址不合法！', type: 'email'},this.verifyEmail]}\r\n                                   hasFeedback>\r\n                            <Input allowClear/>\r\n                        </Form.Item>\r\n                        <Form.Item name='pwd' label='登录密码' rules={[{\r\n                            required: true,\r\n                            message: '密码必须包含大小写字母和数字的组合，长度在8-16位之间',\r\n                            type: 'string',\r\n                            pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,16}$/\r\n                        }]} hasFeedback>\r\n                            <Input.Password placeholder='请输入登录密码' allowClear/>\r\n                        </Form.Item>\r\n                        <Form.Item name='configPwd' label='确认密码' dependencies={['pwd']} hasFeedback rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请再次输入密码并确保两次密码输入一致！',\r\n                            },\r\n                            ({getFieldValue}) => ({\r\n                                    validator(_, value) {\r\n                                        if (!value || getFieldValue('pwd') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('两次输入密码不一致！');\r\n                                    }\r\n                                }\r\n                            )\r\n                        ]}>\r\n                            <Input.Password placeholder='请再次输入登录密码' allowClear/>\r\n                        </Form.Item>\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type='primary' htmlType='submit' style={{width: '100%'}}\r\n                                    loading={this.state.loading}>提交</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sign;\r\n"]},"metadata":{},"sourceType":"module"}