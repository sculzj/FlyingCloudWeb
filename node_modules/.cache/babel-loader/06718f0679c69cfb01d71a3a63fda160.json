{"ast":null,"code":"import \"antd/es/tree/style/css\";\nimport _Tree from \"antd/es/tree\";\nvar _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\pages\\\\Admin\\\\WorkSpace\\\\AddGroups\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { ApartmentOutlined } from \"@ant-design/icons\";\nimport Store from \"../../../../redux/store\";\nimport addGroupStyle from './index.module.css';\nimport GroupInfo from \"./GroupInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  store\n} = Store;\n\nclass AddGroups extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: '',\n      height: '1000px',\n      selected: [],\n      source: ''\n    };\n\n    this.transData = data => {\n      const treeData = {\n        title: '',\n        key: '',\n        children: [],\n        groupCode: ''\n      };\n      data.forEach((item, _, array) => {\n        if (item.parent) {\n          for (let tmp of array) {\n            if (tmp.groupCode === item.parent) {\n              if (!tmp.children) {\n                tmp.children = [];\n              }\n\n              if (!tmp.title) {\n                tmp.title = tmp.groupName;\n              }\n\n              if (!tmp.key) {\n                tmp.key = tmp.groupCode;\n              }\n\n              item.title = item.groupName;\n              item.key = item.groupCode;\n              tmp.children.push(item);\n            }\n          }\n        } else {\n          treeData.title = item.groupName;\n          treeData.key = item.groupCode;\n          treeData.children = item.children;\n          treeData.groupCode = item.groupCode;\n        }\n      });\n      return treeData;\n    };\n\n    this.getGroupInfo = selectedKeys => {\n      if (selectedKeys.length === 0) return;\n      let parent = '';\n      const groupInfo = this.state.source.filter(item => {\n        if (item.groupCode === selectedKeys[0]) {\n          parent = item.parent;\n          return true;\n        }\n\n        return false;\n      });\n      const parentInfo = this.state.source.filter(item => {\n        if (item.groupCode === parent) {\n          return true;\n        }\n\n        return false;\n      });\n      const selected = {\n        name: groupInfo[0].groupName,\n        parent: parentInfo[0] ? parentInfo[0].groupName : '--',\n        members: groupInfo[0].groupMembers,\n        key: groupInfo[0].groupCode\n      };\n      this.setState({\n        selected: [selected]\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      height: `${window.innerHeight - 74}px`\n    });\n    window.addEventListener('resize', () => {\n      this.setState({\n        height: `${window.innerHeight - 74}px`\n      });\n    });\n    axios({\n      url: 'http://localhost:3000/api/orgGroup',\n      method: 'post',\n      headers: {\n        Authorization: store.getState().token\n      }\n    }).then(response => {\n      const source = response.data.groups;\n      this.setState({\n        source: source\n      });\n      const groups = this.transData(source);\n      this.setState({\n        list: [groups]\n      });\n    }).catch();\n  }\n\n  render() {\n    console.log('1', this.state.list);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: addGroupStyle.group,\n        style: {\n          height: this.state.height\n        },\n        children: /*#__PURE__*/_jsxDEV(_Tree, {\n          treeData: this.state.list,\n          icon: /*#__PURE__*/_jsxDEV(ApartmentOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 60\n          }, this),\n          showIcon: true,\n          showLine: {\n            showLeafIcon: false\n          },\n          onSelect: this.getGroupInfo,\n          style: {\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GroupInfo, {\n        selected: this.state.selected,\n        treeData: this.state.list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AddGroups;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/pages/Admin/WorkSpace/AddGroups/index.jsx"],"names":["React","Component","axios","ApartmentOutlined","Store","addGroupStyle","GroupInfo","store","AddGroups","state","list","height","selected","source","transData","data","treeData","title","key","children","groupCode","forEach","item","_","array","parent","tmp","groupName","push","getGroupInfo","selectedKeys","length","groupInfo","filter","parentInfo","name","members","groupMembers","setState","componentDidMount","window","innerHeight","addEventListener","url","method","headers","Authorization","getState","token","then","response","groups","catch","render","console","log","group","showLeafIcon","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Tree} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {ApartmentOutlined} from \"@ant-design/icons\";\r\nimport Store from \"../../../../redux/store\";\r\nimport addGroupStyle from './index.module.css';\r\nimport GroupInfo from \"./GroupInfo\";\r\n\r\nconst {store} = Store;\r\n\r\n\r\nclass AddGroups extends Component {\r\n\r\n    state = {list: '', height: '1000px', selected: [], source: ''};\r\n\r\n    transData = (data) => {\r\n        const treeData = {\r\n            title: '',\r\n            key: '',\r\n            children: [],\r\n            groupCode:''\r\n        };\r\n        data.forEach((item, _, array) => {\r\n            if (item.parent) {\r\n                for (let tmp of array) {\r\n                    if (tmp.groupCode === item.parent) {\r\n                        if (!tmp.children) {\r\n                            tmp.children = [];\r\n                        }\r\n                        if (!tmp.title) {\r\n                            tmp.title = tmp.groupName;\r\n                        }\r\n                        if (!tmp.key) {\r\n                            tmp.key = tmp.groupCode;\r\n                        }\r\n                        item.title = item.groupName;\r\n                        item.key = item.groupCode;\r\n                        tmp.children.push(item);\r\n                    }\r\n                }\r\n            } else {\r\n                treeData.title = item.groupName;\r\n                treeData.key = item.groupCode;\r\n                treeData.children = item.children;\r\n                treeData.groupCode=item.groupCode;\r\n            }\r\n        })\r\n        return treeData;\r\n    }\r\n\r\n    getGroupInfo = (selectedKeys) => {\r\n        if (selectedKeys.length===0)\r\n            return;\r\n        let parent = '';\r\n        const groupInfo = this.state.source.filter(item => {\r\n            if (item.groupCode === selectedKeys[0]) {\r\n                parent = item.parent;\r\n                return true;\r\n            }\r\n            return false\r\n        });\r\n        const parentInfo = this.state.source.filter(item => {\r\n            if (item.groupCode === parent) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        const selected = {\r\n            name: groupInfo[0].groupName,\r\n            parent: parentInfo[0] ? parentInfo[0].groupName : '--',\r\n            members: groupInfo[0].groupMembers,\r\n            key: groupInfo[0].groupCode\r\n        };\r\n        this.setState({selected: [selected]});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({height: `${window.innerHeight - 74}px`});\r\n        window.addEventListener('resize', () => {\r\n            this.setState({height: `${window.innerHeight - 74}px`});\r\n        });\r\n        axios({\r\n            url: 'http://localhost:3000/api/orgGroup',\r\n            method: 'post',\r\n            headers: {Authorization: store.getState().token}\r\n        }).then(response => {\r\n            const source = response.data.groups;\r\n            this.setState({source: source});\r\n            const groups = this.transData(source);\r\n            this.setState({list: [groups]});\r\n        }).catch();\r\n    }\r\n\r\n    render() {\r\n        console.log('1',this.state.list);\r\n        return (\r\n            <>\r\n                <div className={addGroupStyle.group} style={{height: this.state.height}}>\r\n                    <Tree treeData={this.state.list} icon={<ApartmentOutlined/>} showIcon={true}\r\n                          showLine={{showLeafIcon: false}} onSelect={this.getGroupInfo} style={{fontSize:'16px'}}/>\r\n                </div>\r\n                <GroupInfo selected={this.state.selected} treeData={this.state.list}/>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGroups;\r\n"]},"metadata":{},"sourceType":"module"}