{"ast":null,"code":"\"use strict\";\n/**\n * @file 折线覆盖物\n * @author hedongran\n * @email hdr01@126.com\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar Graphy_1 = tslib_1.__importDefault(require(\"./Graphy\"));\n\nvar shallowequal_1 = tslib_1.__importDefault(require(\"shallowequal\"));\n\n;\n/**\n * 在地图上绘制简单的折线\n * @visibleName Polyline 折线\n */\n\nvar Polyline =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Polyline, _super);\n\n  function Polyline(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.options = ['strokeColor', 'strokeWeight', 'strokeOpacity', 'strokeStyle', 'dashArray', 'enableMassClear', 'enableEditing'];\n    return _this;\n  }\n\n  Polyline.prototype.onDataUpdate = function (prevProps) {\n    var _a = this.props,\n        path = _a.path,\n        autoViewport = _a.autoViewport;\n    var prePath = prevProps.path,\n        preViewport = prevProps.autoViewport;\n    var isDataChanged = path && !shallowequal_1.default(path, prePath);\n    var isViewportChanged = !shallowequal_1.default(autoViewport, preViewport);\n\n    if (isDataChanged) {\n      this.overlay.setPath(this.parsePath(path));\n    }\n\n    if (autoViewport && (isDataChanged || isViewportChanged)) {\n      var path_1 = this.overlay.getPath();\n      var viewport = this.props.map.getViewport(path_1, this.props.viewportOptions || {});\n      this.props.map.setViewport(viewport);\n    }\n  };\n\n  Polyline.prototype.getOverlay = function () {\n    var path = this.parsePath(this.props.path);\n    return new BMapGL.Polyline(path, this.getOptions());\n  };\n\n  Polyline.prototype.parsePath = function (path) {\n    var isMC = this.props.coordType === 'bd09mc';\n    var out = path.map(function (position) {\n      var point;\n\n      if (position instanceof Array) {\n        point = new BMapGL.Point(position[0], position[1]);\n      } else if (position instanceof BMapGL.Point) {\n        point = position;\n      } else {\n        point = new BMapGL.Point(position.lng, position.lat);\n      }\n\n      if (isMC) {\n        point = BMapGL.Projection.convertMC2LL(point);\n      }\n\n      return point;\n    });\n    return out;\n  };\n\n  Polyline.prototype.render = function () {\n    return null;\n  };\n\n  return Polyline;\n}(Graphy_1.default);\n\nexports.default = Polyline;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/node_modules/react-bmapgl/Overlay/Polyline.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","Graphy_1","__importDefault","shallowequal_1","Polyline","_super","__extends","props","_this","call","options","prototype","onDataUpdate","prevProps","_a","path","autoViewport","prePath","preViewport","isDataChanged","default","isViewportChanged","overlay","setPath","parsePath","path_1","getPath","viewport","map","getViewport","viewportOptions","setViewport","getOverlay","BMapGL","getOptions","isMC","coordType","out","position","point","Array","Point","lng","lat","Projection","convertMC2LL","render"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @file 折线覆盖物\n * @author hedongran\n * @email hdr01@126.com\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Graphy_1 = tslib_1.__importDefault(require(\"./Graphy\"));\nvar shallowequal_1 = tslib_1.__importDefault(require(\"shallowequal\"));\n;\n/**\n * 在地图上绘制简单的折线\n * @visibleName Polyline 折线\n */\nvar Polyline = /** @class */ (function (_super) {\n    tslib_1.__extends(Polyline, _super);\n    function Polyline(props) {\n        var _this = _super.call(this, props) || this;\n        _this.options = [\n            'strokeColor',\n            'strokeWeight',\n            'strokeOpacity',\n            'strokeStyle',\n            'dashArray',\n            'enableMassClear',\n            'enableEditing',\n        ];\n        return _this;\n    }\n    Polyline.prototype.onDataUpdate = function (prevProps) {\n        var _a = this.props, path = _a.path, autoViewport = _a.autoViewport;\n        var prePath = prevProps.path, preViewport = prevProps.autoViewport;\n        var isDataChanged = path && !shallowequal_1.default(path, prePath);\n        var isViewportChanged = !shallowequal_1.default(autoViewport, preViewport);\n        if (isDataChanged) {\n            this.overlay.setPath(this.parsePath(path));\n        }\n        if (autoViewport && (isDataChanged || isViewportChanged)) {\n            var path_1 = this.overlay.getPath();\n            var viewport = this.props.map.getViewport(path_1, this.props.viewportOptions || {});\n            this.props.map.setViewport(viewport);\n        }\n    };\n    Polyline.prototype.getOverlay = function () {\n        var path = this.parsePath(this.props.path);\n        return new BMapGL.Polyline(path, this.getOptions());\n    };\n    Polyline.prototype.parsePath = function (path) {\n        var isMC = this.props.coordType === 'bd09mc';\n        var out = path.map(function (position) {\n            var point;\n            if (position instanceof Array) {\n                point = new BMapGL.Point(position[0], position[1]);\n            }\n            else if (position instanceof BMapGL.Point) {\n                point = position;\n            }\n            else {\n                point = new BMapGL.Point(position.lng, position.lat);\n            }\n            if (isMC) {\n                point = BMapGL.Projection.convertMC2LL(point);\n            }\n            return point;\n        });\n        return out;\n    };\n    Polyline.prototype.render = function () {\n        return null;\n    };\n    return Polyline;\n}(Graphy_1.default));\nexports.default = Polyline;\n"]},"metadata":{},"sourceType":"script"}