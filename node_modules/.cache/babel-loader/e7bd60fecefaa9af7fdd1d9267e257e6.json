{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\components\\\\View\\\\VisitorVolume\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport * as echarts from 'echarts/core';\nimport { TitleComponent, GridComponent, DataZoomComponent } from 'echarts/components';\nimport { BarChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VisitorVolume extends Component {\n  componentDidMount() {\n    echarts.use([TitleComponent, GridComponent, DataZoomComponent, BarChart, CanvasRenderer]);\n    const chartDom = this.container;\n    const myChart = echarts.init(chartDom);\n    const dataAxis = ['点', '击', '柱', '子', '或', '者', '两', '指', '在', '触', '屏', '上', '滑', '动', '能', '够', '自', '动', '缩', '放'];\n    const data = [220, 182, 191, 234, 290, 330, 310, 123, 442, 321, 90, 149, 210, 122, 133, 334, 198, 123, 125, 220];\n    const yMax = 500;\n    const dataShadow = [];\n\n    for (let i = 0; i < data.length; i++) {\n      dataShadow.push(yMax);\n    }\n\n    const option = {\n      title: {\n        text: '24小时站点流量',\n        left: 'center',\n        textStyle: {\n          fontsize: '20px',\n          color: 'white'\n        }\n      },\n      xAxis: {\n        data: dataAxis,\n        axisLabel: {\n          rotate: 45,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: false\n        },\n        z: 10\n      },\n      yAxis: {\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          textStyle: {\n            color: '#999'\n          }\n        }\n      },\n      dataZoom: [{\n        type: 'inside'\n      }],\n      series: [{\n        type: 'bar',\n        showBackground: true,\n        itemStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: '#83bff6'\n          }, {\n            offset: 0.5,\n            color: '#188df0'\n          }, {\n            offset: 1,\n            color: '#188df0'\n          }])\n        },\n        emphasis: {\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: '#2378f7'\n            }, {\n              offset: 0.7,\n              color: '#2378f7'\n            }, {\n              offset: 1,\n              color: '#83bff6'\n            }])\n          }\n        },\n        data: data\n      }]\n    };\n    const zoomSize = 6;\n    myChart.on('click', function (params) {\n      console.log(dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);\n      myChart.dispatchAction({\n        type: 'dataZoom',\n        startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\n        endValue: dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]\n      });\n    });\n    option && myChart.setOption(option);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      ref: element => {\n        this.container = element;\n      },\n      style: {\n        width: '630px',\n        height: '428px',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default VisitorVolume;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/components/View/VisitorVolume/index.jsx"],"names":["React","Component","echarts","TitleComponent","GridComponent","DataZoomComponent","BarChart","CanvasRenderer","VisitorVolume","componentDidMount","use","chartDom","container","myChart","init","dataAxis","data","yMax","dataShadow","i","length","push","option","title","text","left","textStyle","fontsize","color","xAxis","axisLabel","rotate","axisTick","show","axisLine","z","yAxis","dataZoom","type","series","showBackground","itemStyle","graphic","LinearGradient","offset","emphasis","zoomSize","on","params","console","log","Math","max","dataIndex","dispatchAction","startValue","endValue","min","setOption","render","element","width","height","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport * as echarts from 'echarts/core';\r\nimport {\r\n    TitleComponent,\r\n    GridComponent,\r\n    DataZoomComponent\r\n} from 'echarts/components';\r\nimport {\r\n    BarChart\r\n} from 'echarts/charts';\r\nimport {\r\n    CanvasRenderer\r\n} from 'echarts/renderers';\r\n\r\n\r\nclass VisitorVolume extends Component {\r\n\r\n    componentDidMount() {\r\n        echarts.use(\r\n            [TitleComponent, GridComponent, DataZoomComponent, BarChart, CanvasRenderer]\r\n        );\r\n\r\n        const chartDom = this.container;\r\n        const myChart = echarts.init(chartDom);\r\n        const dataAxis = ['点', '击', '柱', '子', '或', '者', '两', '指', '在', '触', '屏', '上', '滑', '动', '能', '够', '自', '动', '缩', '放'];\r\n        const data = [220, 182, 191, 234, 290, 330, 310, 123, 442, 321, 90, 149, 210, 122, 133, 334, 198, 123, 125, 220];\r\n        const yMax = 500;\r\n        const dataShadow = [];\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            dataShadow.push(yMax);\r\n        }\r\n\r\n        const option = {\r\n            title: {\r\n                text: '24小时站点流量',\r\n                left:'center',\r\n                textStyle:{fontsize:'20px',color:'white'}\r\n            },\r\n            xAxis: {\r\n                data: dataAxis,\r\n                axisLabel: {\r\n                    rotate:45,\r\n                    textStyle: {\r\n                        color: '#fff'\r\n                    }\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                z: 10\r\n            },\r\n            yAxis: {\r\n                axisLine: {\r\n                    show: false\r\n                },\r\n                axisTick: {\r\n                    show: false\r\n                },\r\n                axisLabel: {\r\n                    textStyle: {\r\n                        color: '#999'\r\n                    }\r\n                }\r\n            },\r\n            dataZoom: [\r\n                {\r\n                    type: 'inside'\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    type: 'bar',\r\n                    showBackground: true,\r\n                    itemStyle: {\r\n                        color: new echarts.graphic.LinearGradient(\r\n                            0, 0, 0, 1,\r\n                            [\r\n                                {offset: 0, color: '#83bff6'},\r\n                                {offset: 0.5, color: '#188df0'},\r\n                                {offset: 1, color: '#188df0'}\r\n                            ]\r\n                        )\r\n                    },\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            color: new echarts.graphic.LinearGradient(\r\n                                0, 0, 0, 1,\r\n                                [\r\n                                    {offset: 0, color: '#2378f7'},\r\n                                    {offset: 0.7, color: '#2378f7'},\r\n                                    {offset: 1, color: '#83bff6'}\r\n                                ]\r\n                            )\r\n                        }\r\n                    },\r\n                    data: data\r\n                }\r\n            ]\r\n        };\r\n\r\n        const zoomSize = 6;\r\n        myChart.on('click', function (params) {\r\n            console.log(dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);\r\n            myChart.dispatchAction({\r\n                type: 'dataZoom',\r\n                startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\r\n                endValue: dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]\r\n            });\r\n        });\r\n\r\n        option && myChart.setOption(option);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='main' ref={element => {\r\n                this.container = element\r\n            }} style={{width: '630px', height: '428px', marginTop: '20px'}}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VisitorVolume;\r\n"]},"metadata":{},"sourceType":"module"}