{"ast":null,"code":"import \"antd/es/spin/style/css\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/empty/style/css\";\nimport _Empty from \"antd/es/empty\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\pages\\\\ProductCenter\\\\index.jsx\";\nimport React, { PureComponent } from 'react';\nimport Product from \"../../components/Product\";\nimport productionStyle from './index.module.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProductionCenter extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productInfo: ''\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: '/api/product'\n    }).then(response => {\n      this.setState({\n        productInfo: response.data\n      });\n    }).catch(err => {\n      _Modal.error({\n        title: '错误！',\n        okText: '确认',\n        content: '请求失败！请检测网络连接及配置！',\n        onOk: () => {\n          this.setState({\n            productInfo: 'empty'\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: productionStyle.frame,\n      children: this.state.productInfo === 'empty' ? /*#__PURE__*/_jsxDEV(_Empty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 58\n      }, this) : this.state.productInfo ? /*#__PURE__*/_jsxDEV(Product, {\n        productInfo: this.state.productInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductionCenter;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/pages/ProductCenter/index.jsx"],"names":["React","PureComponent","Product","productionStyle","axios","ProductionCenter","state","productInfo","componentDidMount","method","url","then","response","setState","data","catch","err","error","title","okText","content","onOk","render","frame"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,gBAAN,SAA+BJ,aAA/B,CAA6C;AAAA;AAAA;AAAA,SAEzCK,KAFyC,GAEjC;AAACC,MAAAA,WAAW,EAAE;AAAd,KAFiC;AAAA;;AAIzCC,EAAAA,iBAAiB,GAAG;AAChBJ,IAAAA,KAAK,CAAC;AACFK,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAI;AACZ,WAAKC,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAEK,QAAQ,CAACE;AAAvB,OAAd;AACH,KALL,EAMEC,KANF,CAMQC,GAAG,IAAI;AACX,aAAMC,KAAN,CAAY;AACRC,QAAAA,KAAK,EAAE,KADC;AAERC,QAAAA,MAAM,EAAE,IAFA;AAGRC,QAAAA,OAAO,EAAE,kBAHD;AAIRC,QAAAA,IAAI,EAAE,MAAM;AACR,eAAKR,QAAL,CAAc;AAACN,YAAAA,WAAW,EAAE;AAAd,WAAd;AACH;AANO,OAAZ;AAQH,KAfD;AAgBH;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAEnB,eAAe,CAACoB,KAAhC;AAAA,gBAEQ,KAAKjB,KAAL,CAAWC,WAAX,KAA2B,OAA3B,gBAAqC;AAAA;AAAA;AAAA;AAAA,cAArC,GAAgD,KAAKD,KAAL,CAAWC,WAAX,gBAC5C,QAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAD4C,gBACM;AAAA;AAAA;AAAA;AAAA;AAH9D;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAhCwC;;AAoC7C,eAAeF,gBAAf","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport Product from \"../../components/Product\";\r\nimport productionStyle from './index.module.css';\r\nimport axios from \"axios\";\r\nimport {Empty, Modal, Spin} from \"antd\";\r\n\r\nclass ProductionCenter extends PureComponent {\r\n\r\n    state = {productInfo: ''};\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: '/api/product'\r\n        }).then(response => {\r\n                this.setState({productInfo: response.data})\r\n            }\r\n        ).catch(err => {\r\n            Modal.error({\r\n                title: '错误！',\r\n                okText: '确认',\r\n                content: '请求失败！请检测网络连接及配置！',\r\n                onOk: () => {\r\n                    this.setState({productInfo: 'empty'})\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={productionStyle.frame}>\r\n                {\r\n                    this.state.productInfo === 'empty' ? <Empty/> : this.state.productInfo ?\r\n                        <Product productInfo={this.state.productInfo}/> : <Spin/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductionCenter;"]},"metadata":{},"sourceType":"module"}