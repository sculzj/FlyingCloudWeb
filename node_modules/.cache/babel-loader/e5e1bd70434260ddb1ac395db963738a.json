{"ast":null,"code":"import \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/upload/style/css\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\pages\\\\Register\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { EnvironmentOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { Status } from '../../resource/constant';\nimport NavCommon from \"../../components/NavCommon\";\nimport Footer from \"../../components/Footer\";\nimport Results from \"./Results\";\nimport registerStyle from './index.module.css';\nimport MapPanel from \"./MapPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    sm: {\n      span: 5\n    }\n  },\n  wrapperCol: {\n    sm: {\n      span: 17\n    }\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 5,\n    span: 17\n  }\n};\n\nclass Sign extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      codeState: {\n        verify: '',\n        message: ''\n      },\n      EmailState: {\n        verify: '',\n        message: ''\n      },\n      loading: false,\n      percent: 0,\n      result: '',\n      map: false,\n      point: '',\n      address: '',\n      readyUp: false\n    };\n\n    this.verifyCode = () => ({\n      validator(_, value) {\n        return new Promise((resolve, reject) => {\n          axios({\n            url: '/api/verifyOrgCode',\n            method: 'post',\n            data: {\n              code: value\n            }\n          }).then(response => {\n            if (response.data.state === Status.success) {\n              reject('该企业已注册，不允许重复注册！');\n            } else {\n              resolve();\n            }\n          }).catch(err => {\n            reject(err.message);\n          });\n        });\n      }\n\n    });\n\n    this.verifyEmail = () => ({\n      validator(_, value) {\n        return new Promise((resolve, reject) => {\n          axios({\n            url: '/api/verifyOrgEmail',\n            method: 'post',\n            data: {\n              email: value\n            }\n          }).then(response => {\n            if (response.data.state === Status.success) {\n              reject('该邮箱已绑定企业，不允许重复绑定！');\n            } else {\n              resolve();\n            }\n          }).catch(err => {\n            reject(err.message);\n          });\n        });\n      }\n\n    });\n\n    this.verifyIdentity = () => ({\n      validator(_, value) {\n        return new Promise((resolve, reject) => {\n          axios({\n            url: '/api/verifyIdentity',\n            method: 'post',\n            data: {\n              identity: value\n            }\n          }).then(response => {\n            if (response.data.state === Status.failed) {\n              reject('该识别码已存在，请更换！');\n            } else {\n              resolve();\n            }\n          }).catch(err => {\n            reject(err.message);\n          });\n        });\n      }\n\n    });\n\n    this.readyLicense = file => {\n      if (this.files.has('license')) {\n        this.files.delete('license');\n      }\n\n      this.files.append('license', file, `${this.formRef.getFieldValue('identity')}_License${file.name.slice(file.name.lastIndexOf('.'))}`);\n      console.log(`${this.formRef.getFieldValue('identity')}_License${file.name.slice(file.name.lastIndexOf('.'))}`);\n      return false;\n    };\n\n    this.readyAuthLeter = file => {\n      if (this.files.has('authLeter')) {\n        this.files.delete('authLeter');\n      }\n\n      this.files.append('authLeter', file, `${this.formRef.getFieldValue('identity')}_AuthLeter${file.name.slice(file.name.lastIndexOf('.'))}`);\n      return false;\n    };\n\n    this.toRegister = values => {\n      if (!this.clause.state.checked) {\n        _Modal.error({\n          title: '错误！',\n          okText: '确认！',\n          content: '您必须同意服务条款后才能进行注册！'\n        });\n\n        return;\n      }\n\n      if (!this.files.get('authLeter') || !this.files.get('license')) {\n        _Modal.error({\n          title: '错误！',\n          okText: '确认！',\n          content: '必须上传营业执照和法人授权函！'\n        });\n\n        return;\n      }\n\n      const {\n        code,\n        name,\n        email,\n        site,\n        address,\n        mobile,\n        telephone,\n        identity,\n        pwd\n      } = values;\n      this.setState({\n        loading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 15000);\n      axios({\n        method: 'post',\n        url: '/api/register',\n        data: {\n          code,\n          name,\n          email,\n          site,\n          address,\n          mobile,\n          telephone,\n          identity,\n          pwd\n        }\n      }).then(response => {\n        if (response.data.state === Status.success) {\n          axios({\n            url: '/api/upload',\n            method: 'post',\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            },\n            data: this.files\n          }).then(() => {\n            this.setState({\n              result: Status.success\n            });\n          }).catch(err => {\n            alert(err.message);\n          });\n        }\n      }).catch();\n    };\n\n    this.showMap = () => {\n      this.setState({\n        map: true\n      });\n    };\n\n    this.hideMap = () => {\n      this.setState({\n        map: false\n      });\n      this.formRef.validateFields(['address']).then().catch(e => {});\n    };\n\n    this.saveAddress = value => {\n      this.setState({\n        address: value\n      });\n    };\n\n    this.onOk = () => {\n      const {\n        address\n      } = this.state;\n\n      if (address) {\n        if (!address.includes('市') && !address.includes('省')) {\n          _message.warn({\n            content: '当前地址未包含省级或市级信息，请从搜索列表中选择正确的地址信息！',\n            duration: 5\n          }).then();\n\n          return;\n        }\n      } else {\n        _message.warn({\n          content: '不接受自定义输入的地址信息，请从搜索列表中选择正确的地址信息！',\n          duration: 5\n        }).then();\n\n        return;\n      }\n\n      this.formRef.setFieldsValue({\n        address: address\n      });\n      this.hideMap();\n    };\n  }\n\n  componentDidMount() {\n    this.files = new FormData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavCommon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), this.state.result === Status.success ? /*#__PURE__*/_jsxDEV(Results, {\n        statu: Status.success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 60\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: registerStyle.frame,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../../images/register_background.jpg\").default,\n          className: registerStyle.back,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: registerStyle.content,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: registerStyle.title,\n            children: \"\\u4F01\\u4E1A\\u7528\\u6237\\u6CE8\\u518C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(_Form, {\n            name: \"register\",\n            scrollToFirstError: true,\n            ...formItemLayout,\n            size: \"large\",\n            ref: element => {\n              this.formRef = element;\n            },\n            onFinish: this.toRegister,\n            children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"code\",\n              label: \"\\u7EC4\\u7EC7\\u673A\\u6784\\u4EE3\\u7801\",\n              hasFeedback: true,\n              validateFirst: true,\n              rules: [{\n                required: true,\n                message: '组织机构代码不合法！',\n                type: 'string',\n                pattern: /^[A-Z0-9]+$/,\n                len: 18\n              }, this.verifyCode],\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                allowClear: true,\n                onBlur: this.verifyOrgCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"name\",\n              label: \"\\u4F01\\u4E1A\\u540D\\u79F0\",\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: '企业名称不能为空！'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                allowClear: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"identity\",\n              label: \"\\u8BC6\\u522B\\u7801\",\n              hasFeedback: true,\n              validateFirst: true,\n              rules: [{\n                required: true,\n                message: '识别码包含大小写字母与数字的组合，长度为3-8位中间',\n                type: 'string',\n                pattern: /^[A-Za-z0-9]{3,8}$/\n              }, this.verifyIdentity],\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                placeholder: \"\\u8BC6\\u522B\\u7801\\u5C06\\u4F5C\\u4E3A\\u533A\\u5206\\u4F01\\u4E1A\\u7684\\u4E3B\\u8981\\u6807\\u8BC6\\uFF0C\\u4E0D\\u53EF\\u4FEE\\u6539\\uFF0C\\u8BF7\\u8C28\\u614E\\u586B\\u5199\\uFF01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"email\",\n              label: \"\\u7BA1\\u7406\\u90AE\\u7BB1\",\n              validateFirst: true,\n              rules: [{\n                required: true,\n                message: '邮箱地址不合法！',\n                type: 'email'\n              }, this.verifyEmail],\n              hasFeedback: true,\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                allowClear: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"site\",\n              label: \"\\u4F01\\u4E1A\\u5B98\\u7F51\",\n              rules: [{\n                required: true,\n                message: '企业站点不合法！',\n                type: 'url'\n              }],\n              hasFeedback: true,\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                allowClear: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              label: \"\\u4F01\\u4E1A\\u5730\\u5740\",\n              name: \"address\",\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: '企业地址不能为空！'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                suffix: /*#__PURE__*/_jsxDEV(EnvironmentOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 56\n                }, this),\n                onFocus: this.showMap,\n                ref: element => {\n                  this.address = element;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"orgLicense\",\n              getValueProps: () => {\n                return 'fileList';\n              },\n              label: \"\\u8425\\u4E1A\\u6267\\u7167\",\n              required: true,\n              children: /*#__PURE__*/_jsxDEV(_Upload, {\n                maxCount: 1,\n                accept: \".png,.jpg,.pdf\",\n                className: registerStyle.upload,\n                beforeUpload: this.readyLicense,\n                openFileDialogOnClick: this.state.readyUp,\n                children: /*#__PURE__*/_jsxDEV(_Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 59\n                  }, this),\n                  block: true,\n                  children: \"\\u4E0A\\u4F20\\u6587\\u4EF6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"orgAuthLeter\",\n              getValueProps: () => {\n                return 'fileList';\n              },\n              label: \"\\u6CD5\\u4EBA\\u6388\\u6743\\u51FD\",\n              required: true,\n              children: /*#__PURE__*/_jsxDEV(_Upload, {\n                maxCount: 1,\n                accept: \".png,.jpg,.pdf\",\n                className: registerStyle.upload,\n                beforeUpload: this.readyAuthLeter,\n                children: /*#__PURE__*/_jsxDEV(_Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 59\n                  }, this),\n                  block: true,\n                  children: \"\\u4E0A\\u4F20\\u6587\\u4EF6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              label: \"\\u79FB\\u52A8\\u7535\\u8BDD\",\n              name: \"mobile\",\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: '移动电话号码为1开头的11位数字组合',\n                type: 'string',\n                pattern: /^1\\d{10}$/\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              label: \"\\u56FA\\u5B9A\\u7535\\u8BDD\",\n              name: \"telephone\",\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: '固定电话为“区号-座机号码”格式的11位或12为数字组合',\n                type: \"string\",\n                pattern: /\\d{3}-\\d{8}|\\d{4}-\\d{7}/\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                placeholder: \"\\u683C\\u5F0F\\u4E3A\\uFF1A\\u533A\\u53F7-\\u5EA7\\u673A\\u53F7\\u7801\\uFF0C\\u4F8B\\uFF1A010-12345678\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"pwd\",\n              label: \"\\u767B\\u5F55\\u5BC6\\u7801\",\n              rules: [{\n                required: true,\n                message: '密码必须包含大小写字母和数字的组合，长度在8-16位之间',\n                type: 'string',\n                pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,16}$/\n              }],\n              hasFeedback: true,\n              children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n                placeholder: \"\\u8BF7\\u8F93\\u5165\\u767B\\u5F55\\u5BC6\\u7801\",\n                allowClear: true,\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"configPwd\",\n              label: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n              dependencies: ['pwd'],\n              hasFeedback: true,\n              rules: [{\n                required: true,\n                message: '请再次输入密码并确保两次密码输入一致！'\n              }, ({\n                getFieldValue\n              }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('pwd') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject('两次输入密码不一致！');\n                }\n\n              })],\n              children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n                placeholder: \"\\u8BF7\\u518D\\u6B21\\u8F93\\u5165\\u767B\\u5F55\\u5BC6\\u7801\",\n                allowClear: true,\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              wrapperCol: {\n                offset: 5\n              },\n              name: \"clause\",\n              getValueProps: () => {\n                return 'checked';\n              },\n              children: /*#__PURE__*/_jsxDEV(_Checkbox, {\n                ref: elment => {\n                  this.clause = elment;\n                },\n                children: [\"\\u540C\\u610F\", /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: \"\\u98DE\\u4E91\\u4E92\\u8054\\u670D\\u52A1\\u534F\\u8BAE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, { ...tailLayout,\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                style: {\n                  width: '100%'\n                },\n                loading: this.state.loading,\n                children: \"\\u63D0\\u4EA4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Modal, {\n        visible: this.state.map,\n        width: 800,\n        bodyStyle: {\n          height: '800px'\n        },\n        title: \"\\u5728\\u7EBF\\u5730\\u56FE\",\n        maskClosable: false,\n        okText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onCancel: this.hideMap,\n        onOk: this.onOk,\n        focusTriggerAfterClose: false,\n        children: /*#__PURE__*/_jsxDEV(MapPanel, {\n          saveAddress: this.saveAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Sign;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/pages/Register/index.jsx"],"names":["React","Component","EnvironmentOutlined","UploadOutlined","axios","Status","NavCommon","Footer","Results","registerStyle","MapPanel","formItemLayout","labelCol","sm","span","wrapperCol","tailLayout","offset","Sign","state","codeState","verify","message","EmailState","loading","percent","result","map","point","address","readyUp","verifyCode","validator","_","value","Promise","resolve","reject","url","method","data","code","then","response","success","catch","err","verifyEmail","email","verifyIdentity","identity","failed","readyLicense","file","files","has","delete","append","formRef","getFieldValue","name","slice","lastIndexOf","console","log","readyAuthLeter","toRegister","values","clause","checked","error","title","okText","content","get","site","mobile","telephone","pwd","setState","setTimeout","headers","alert","showMap","hideMap","validateFields","e","saveAddress","onOk","includes","warn","duration","setFieldsValue","componentDidMount","FormData","render","frame","require","default","back","element","required","type","pattern","len","verifyOrgCode","upload","elment","width","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Form, Input, Upload, Modal, Checkbox, message} from \"antd\";\r\nimport {EnvironmentOutlined, UploadOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nimport {Status} from '../../resource/constant';\r\nimport NavCommon from \"../../components/NavCommon\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Results from \"./Results\";\r\nimport registerStyle from './index.module.css';\r\nimport MapPanel from \"./MapPanel\";\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        sm: {span: 5}\r\n    },\r\n    wrapperCol: {\r\n        sm: {span: 17}\r\n    }\r\n}\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 5, span: 17}\r\n}\r\n\r\nclass Sign extends Component {\r\n\r\n    componentDidMount() {\r\n        this.files = new FormData();\r\n    }\r\n\r\n    state = {\r\n        codeState: {verify: '', message: ''},\r\n        EmailState: {verify: '', message: ''},\r\n        loading: false,\r\n        percent: 0,\r\n        result: '',\r\n        map: false,\r\n        point: '',\r\n        address:'',\r\n        readyUp:false\r\n    };\r\n\r\n    verifyCode = () => ({\r\n        validator(_, value) {\r\n            return new Promise((resolve, reject) => {\r\n                axios({\r\n                    url: '/api/verifyOrgCode',\r\n                    method: 'post',\r\n                    data: {code: value}\r\n                }).then(response => {\r\n                    if (response.data.state === Status.success) {\r\n                        reject('该企业已注册，不允许重复注册！');\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }).catch(err => {\r\n                        reject(err.message);\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    })\r\n\r\n    verifyEmail = () => ({\r\n        validator(_, value) {\r\n            return new Promise((resolve, reject) => {\r\n                axios({\r\n                    url: '/api/verifyOrgEmail',\r\n                    method: 'post',\r\n                    data: {email: value}\r\n                }).then(response => {\r\n                    if (response.data.state === Status.success) {\r\n                        reject('该邮箱已绑定企业，不允许重复绑定！');\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }).catch(err => {\r\n                        reject(err.message);\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    })\r\n\r\n    verifyIdentity = () => ({\r\n        validator(_, value) {\r\n            return new Promise((resolve, reject) => {\r\n                axios({\r\n                    url: '/api/verifyIdentity',\r\n                    method: 'post',\r\n                    data: {identity: value}\r\n                }).then(response => {\r\n                    if (response.data.state === Status.failed) {\r\n                        reject('该识别码已存在，请更换！');\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                }).catch(err => {\r\n                        reject(err.message);\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    })\r\n\r\n    readyLicense = file => {\r\n        if (this.files.has('license')) {\r\n            this.files.delete('license');\r\n        }\r\n        this.files.append('license', file,\r\n            `${this.formRef.getFieldValue('identity')}_License${file.name.slice(file.name.lastIndexOf('.'))}`);\r\n        console.log(`${this.formRef.getFieldValue('identity')}_License${file.name.slice(file.name.lastIndexOf('.'))}`);\r\n        return false;\r\n    }\r\n\r\n    readyAuthLeter = file => {\r\n        if (this.files.has('authLeter')) {\r\n            this.files.delete('authLeter');\r\n        }\r\n        this.files.append('authLeter', file,\r\n            `${this.formRef.getFieldValue('identity')}_AuthLeter${file.name.slice(file.name.lastIndexOf('.'))}`);\r\n        return false;\r\n    }\r\n\r\n    toRegister = (values) => {\r\n        if (!this.clause.state.checked) {\r\n            Modal.error({\r\n                title: '错误！',\r\n                okText: '确认！',\r\n                content: '您必须同意服务条款后才能进行注册！'\r\n            });\r\n            return;\r\n        }\r\n        if (!this.files.get('authLeter') || !this.files.get('license')) {\r\n            Modal.error({\r\n                title: '错误！',\r\n                okText: '确认！',\r\n                content: '必须上传营业执照和法人授权函！'\r\n            });\r\n            return;\r\n        }\r\n        const {code, name, email, site, address, mobile, telephone, identity, pwd} = values;\r\n        this.setState({loading: true});\r\n        setTimeout(() => {\r\n            this.setState({loading: false});\r\n        }, 15000);\r\n        axios({\r\n            method: 'post',\r\n            url: '/api/register',\r\n            data: {code, name, email, site, address, mobile, telephone, identity, pwd}\r\n        }).then(response => {\r\n            if (response.data.state === Status.success) {\r\n                axios({\r\n                    url: '/api/upload',\r\n                    method: 'post',\r\n                    headers: {'Content-Type': 'multipart/form-data'},\r\n                    data: this.files\r\n                }).then(() => {\r\n                    this.setState({result: Status.success})\r\n                }).catch(err => {\r\n                    alert(err.message);\r\n                });\r\n            }\r\n        }).catch()\r\n    }\r\n\r\n    showMap = () => {\r\n        this.setState({map:true},);\r\n    }\r\n\r\n    hideMap=()=>{\r\n        this.setState({map:false});\r\n        this.formRef.validateFields(['address']).then().catch(e=>{});\r\n    }\r\n\r\n    saveAddress=(value)=>{\r\n        this.setState({address:value});\r\n    }\r\n\r\n    onOk=()=>{\r\n        const {address}=this.state;\r\n        if (address){\r\n            if (!address.includes('市')&&!address.includes('省')){\r\n                message.warn({content:'当前地址未包含省级或市级信息，请从搜索列表中选择正确的地址信息！',duration:5}).then();\r\n                return;\r\n            }\r\n        }else {\r\n            message.warn({content:'不接受自定义输入的地址信息，请从搜索列表中选择正确的地址信息！',duration:5}).then();\r\n            return;\r\n        }\r\n        this.formRef.setFieldsValue({address: address});\r\n        this.hideMap();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavCommon/>\r\n                {\r\n                    this.state.result === Status.success ? <Results statu={Status.success}/> :\r\n                        <div className={registerStyle.frame}>\r\n                            <img src={require(\"../../images/register_background.jpg\").default}\r\n                                 className={registerStyle.back}\r\n                                 alt=''/>\r\n                            <div className={registerStyle.content}>\r\n                                <h2 className={registerStyle.title}>企业用户注册</h2>\r\n                                <Form name='register' scrollToFirstError {...formItemLayout}\r\n                                      size='large' ref={element => {\r\n                                    this.formRef = element\r\n                                }} onFinish={this.toRegister}>\r\n                                    <Form.Item name='code' label='组织机构代码' hasFeedback validateFirst rules={\r\n                                        [\r\n                                            {\r\n                                                required: true,\r\n                                                message: '组织机构代码不合法！',\r\n                                                type: 'string',\r\n                                                pattern: /^[A-Z0-9]+$/,\r\n                                                len: 18\r\n                                            },\r\n                                            this.verifyCode\r\n                                        ]\r\n                                    }>\r\n                                        <Input allowClear onBlur={this.verifyOrgCode}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='name' label='企业名称' hasFeedback\r\n                                               rules={[{required: true, message: '企业名称不能为空！'}]}>\r\n                                        <Input allowClear/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='identity' label='识别码' hasFeedback validateFirst rules={\r\n                                        [\r\n                                            {\r\n                                                required: true,\r\n                                                message: '识别码包含大小写字母与数字的组合，长度为3-8位中间',\r\n                                                type: 'string',\r\n                                                pattern: /^[A-Za-z0-9]{3,8}$/\r\n                                            },\r\n                                            this.verifyIdentity\r\n                                        ]\r\n                                    }>\r\n                                        <Input placeholder='识别码将作为区分企业的主要标识，不可修改，请谨慎填写！'/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='email' label='管理邮箱' validateFirst\r\n                                               rules={\r\n                                                   [\r\n                                                       {\r\n                                                           required: true,\r\n                                                           message: '邮箱地址不合法！',\r\n                                                           type: 'email'\r\n                                                       },\r\n                                                       this.verifyEmail]\r\n                                               }\r\n                                               hasFeedback>\r\n                                        <Input allowClear/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='site' label='企业官网'\r\n                                               rules={[{required: true, message: '企业站点不合法！', type: 'url'}]}\r\n                                               hasFeedback>\r\n                                        <Input allowClear/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label='企业地址' name='address' hasFeedback\r\n                                               rules={[{required: true, message: '企业地址不能为空！'}]}\r\n                                               >\r\n                                        <Input suffix={<EnvironmentOutlined/>}  onFocus={this.showMap} ref={element=>{this.address=element}}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='orgLicense' getValueProps={() => {\r\n                                        return 'fileList'\r\n                                    }} label='营业执照' required>\r\n                                        <Upload maxCount={1} accept='.png,.jpg,.pdf' className={registerStyle.upload}\r\n                                                beforeUpload={this.readyLicense} openFileDialogOnClick={this.state.readyUp}>\r\n                                            <Button icon={<UploadOutlined/>} block>上传文件</Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='orgAuthLeter' getValueProps={() => {\r\n                                        return 'fileList'\r\n                                    }} label='法人授权函' required>\r\n                                        <Upload maxCount={1} accept='.png,.jpg,.pdf' className={registerStyle.upload}\r\n                                                beforeUpload={this.readyAuthLeter}>\r\n                                            <Button icon={<UploadOutlined/>} block>上传文件</Button>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                    <Form.Item label='移动电话' name='mobile' hasFeedback rules={[{\r\n                                        required: true,\r\n                                        message: '移动电话号码为1开头的11位数字组合',\r\n                                        type: 'string',\r\n                                        pattern: /^1\\d{10}$/\r\n                                    }]}>\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label='固定电话' name='telephone' hasFeedback rules={[{\r\n                                        required: true,\r\n                                        message: '固定电话为“区号-座机号码”格式的11位或12为数字组合',\r\n                                        type: \"string\",\r\n                                        pattern: /\\d{3}-\\d{8}|\\d{4}-\\d{7}/\r\n                                    }]}>\r\n                                        <Input placeholder='格式为：区号-座机号码，例：010-12345678'/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='pwd' label='登录密码' rules={[{\r\n                                        required: true,\r\n                                        message: '密码必须包含大小写字母和数字的组合，长度在8-16位之间',\r\n                                        type: 'string',\r\n                                        pattern: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,16}$/\r\n                                    }]} hasFeedback>\r\n                                        <Input.Password placeholder='请输入登录密码' allowClear autoComplete='off'/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name='configPwd' label='确认密码' dependencies={['pwd']} hasFeedback\r\n                                               rules={[\r\n                                                   {\r\n                                                       required: true,\r\n                                                       message: '请再次输入密码并确保两次密码输入一致！',\r\n                                                   },\r\n                                                   ({getFieldValue}) => ({\r\n                                                           validator(_, value) {\r\n                                                               if (!value || getFieldValue('pwd') === value) {\r\n                                                                   return Promise.resolve();\r\n                                                               }\r\n                                                               return Promise.reject('两次输入密码不一致！');\r\n                                                           }\r\n                                                       }\r\n                                                   )\r\n                                               ]}>\r\n                                        <Input.Password placeholder='请再次输入登录密码' allowClear autoComplete='off'/>\r\n                                    </Form.Item>\r\n                                    <Form.Item wrapperCol={{offset: 5}} name='clause' getValueProps={() => {\r\n                                        return 'checked';\r\n                                    }}>\r\n                                        <Checkbox ref={elment => {\r\n                                            this.clause = elment\r\n                                        }}>同意<a>飞云互联服务协议</a></Checkbox>\r\n                                    </Form.Item>\r\n                                    <Form.Item {...tailLayout}>\r\n                                        <Button type='primary' htmlType='submit' style={{width: '100%'}}\r\n                                                loading={this.state.loading}>提交</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <Footer/>\r\n                <Modal visible={this.state.map} width={800} bodyStyle={{height: '800px'}} title='在线地图' maskClosable={false} okText='确认'\r\n                       cancelText='取消' onCancel={this.hideMap} onOk={this.onOk} focusTriggerAfterClose={false}>\r\n                    <MapPanel saveAddress={this.saveAddress}/>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sign;\r\n"]},"metadata":{},"sourceType":"module"}