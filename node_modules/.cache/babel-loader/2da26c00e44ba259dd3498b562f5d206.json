{"ast":null,"code":"import \"antd/es/tree/style/css\";\nimport _Tree from \"antd/es/tree\";\nvar _jsxFileName = \"D:\\\\WebStorm Project\\\\flowingcloud\\\\src\\\\pages\\\\Admin\\\\WorkSpace\\\\AddGroups\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport store from \"../../../../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddGroups extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: ''\n    };\n\n    this.transData = data => {\n      const treeData = {\n        title: '',\n        key: '',\n        children: []\n      };\n      data.forEach((item, _, array) => {\n        if (item.parent) {\n          for (let tmp of array) {\n            if (tmp.groupCode === item.parent) {\n              if (!tmp.nodes) {\n                tmp.nodes = [];\n              }\n\n              tmp.nodes.push(item);\n            }\n          }\n        }\n      });\n      return data.filter(item => !item.parent);\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      url: 'http://localhost:3000/api/orgGroup',\n      method: 'post',\n      headers: {\n        Authorization: store.getState().token\n      }\n    }).then(response => {\n      const groups = this.transData(response.data.groups);\n      this.setState({\n        list: this.transData(groups)\n      });\n    }).catch();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Tree, {\n      treeData: this.state.list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddGroups;","map":{"version":3,"sources":["D:/WebStorm Project/flowingcloud/src/pages/Admin/WorkSpace/AddGroups/index.jsx"],"names":["React","Component","axios","store","AddGroups","state","list","transData","data","treeData","title","key","children","forEach","item","_","array","parent","tmp","groupCode","nodes","push","filter","componentDidMount","url","method","headers","Authorization","getState","token","then","response","groups","setState","catch","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BI,KAF8B,GAEtB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAFsB;;AAAA,SAI9BC,SAJ8B,GAIjBC,IAAD,IAAU;AAClB,YAAMC,QAAQ,GAAC;AACXC,QAAAA,KAAK,EAAC,EADK;AAEXC,QAAAA,GAAG,EAAC,EAFO;AAGXC,QAAAA,QAAQ,EAAC;AAHE,OAAf;AAKAJ,MAAAA,IAAI,CAACK,OAAL,CAAa,CAACC,IAAD,EAAOC,CAAP,EAAUC,KAAV,KAAoB;AAC7B,YAAIF,IAAI,CAACG,MAAT,EAAiB;AACb,eAAK,IAAIC,GAAT,IAAgBF,KAAhB,EAAuB;AACnB,gBAAIE,GAAG,CAACC,SAAJ,KAAkBL,IAAI,CAACG,MAA3B,EAAmC;AAC/B,kBAAI,CAACC,GAAG,CAACE,KAAT,EAAgB;AACZF,gBAAAA,GAAG,CAACE,KAAJ,GAAY,EAAZ;AACH;;AACDF,cAAAA,GAAG,CAACE,KAAJ,CAAUC,IAAV,CAAeP,IAAf;AACH;AACJ;AACJ;AACJ,OAXD;AAYA,aAAON,IAAI,CAACc,MAAL,CAAYR,IAAI,IACnB,CAACA,IAAI,CAACG,MADH,CAAP;AAGH,KAzB6B;AAAA;;AA2B9BM,EAAAA,iBAAiB,GAAG;AAChBrB,IAAAA,KAAK,CAAC;AACFsB,MAAAA,GAAG,EAAE,oCADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAExB,KAAK,CAACyB,QAAN,GAAiBC;AAAjC;AAHP,KAAD,CAAL,CAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,YAAMC,MAAM,GAAE,KAAKzB,SAAL,CAAewB,QAAQ,CAACvB,IAAT,CAAcwB,MAA7B,CAAd;AACA,WAAKC,QAAL,CAAc;AAAC3B,QAAAA,IAAI,EAAC,KAAKC,SAAL,CAAeyB,MAAf;AAAN,OAAd;AACH,KAPD,EAOGE,KAPH;AAQH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA1C6B;;AA6ClC,eAAeF,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Tree} from \"antd\";\r\nimport axios from \"axios\";\r\nimport store from \"../../../../redux/store\";\r\n\r\nclass AddGroups extends Component {\r\n\r\n    state = {list: ''};\r\n\r\n    transData = (data) => {\r\n        const treeData={\r\n            title:'',\r\n            key:'',\r\n            children:[]\r\n        };\r\n        data.forEach((item, _, array) => {\r\n            if (item.parent) {\r\n                for (let tmp of array) {\r\n                    if (tmp.groupCode === item.parent) {\r\n                        if (!tmp.nodes) {\r\n                            tmp.nodes = [];\r\n                        }\r\n                        tmp.nodes.push(item);\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return data.filter(item =>\r\n            !item.parent\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            url: 'http://localhost:3000/api/orgGroup',\r\n            method: 'post',\r\n            headers: {Authorization: store.getState().token}\r\n        }).then(response => {\r\n            const groups =this.transData(response.data.groups);\r\n            this.setState({list:this.transData(groups)});\r\n        }).catch();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tree treeData={this.state.list}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGroups;\r\n"]},"metadata":{},"sourceType":"module"}